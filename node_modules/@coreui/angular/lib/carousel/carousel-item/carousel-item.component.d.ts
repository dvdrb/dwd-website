import * as i0 from "@angular/core";
export declare class CarouselItemComponent {
    #private;
    index?: number;
    /**
     * @ignore
     */
    readonly activeInput: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    readonly active: import("@angular/core").WritableSignal<boolean>;
    /**
     * Time delay before cycling to next item. If -1, uses carousel interval value.
     * @return number
     * @default -1
     */
    readonly interval: import("@angular/core").InputSignal<number>;
    /**
     * Carousel item role.
     * @return string
     * @default 'group'
     */
    readonly role: import("@angular/core").InputSignal<string>;
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<CarouselItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CarouselItemComponent, "c-carousel-item", ["cCarouselItem"], { "activeInput": { "alias": "active"; "required": false; "isSignal": true; }; "interval": { "alias": "interval"; "required": false; "isSignal": true; }; "role": { "alias": "role"; "required": false; "isSignal": true; }; }, {}, never, ["*"], true, never>;
}
