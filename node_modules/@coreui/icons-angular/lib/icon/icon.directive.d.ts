import { IIcon, IPointerEvents, NgCssClass } from './icon.interface';
import * as i0 from "@angular/core";
export declare class IconDirective implements IIcon {
    #private;
    readonly content: import("@angular/core").InputSignal<string | any[] | string[] | undefined>;
    readonly customClasses: import("@angular/core").InputSignal<NgCssClass | undefined>;
    readonly size: import("@angular/core").InputSignal<string>;
    readonly title: import("@angular/core").InputSignal<string | undefined>;
    readonly height: import("@angular/core").InputSignal<string | undefined>;
    readonly width: import("@angular/core").InputSignal<string | undefined>;
    readonly name: import("@angular/core").InputSignalWithTransform<string, string>;
    readonly viewBoxInput: import("@angular/core").InputSignal<string | undefined>;
    readonly xmlns: import("@angular/core").InputSignal<string>;
    readonly pointerEvents: import("@angular/core").InputSignal<IPointerEvents>;
    readonly role: import("@angular/core").InputSignal<string>;
    readonly hostClasses: import("@angular/core").Signal<NgCssClass>;
    readonly viewBox: import("@angular/core").Signal<string>;
    readonly innerHtml: import("@angular/core").Signal<import("@angular/platform-browser").SafeHtml>;
    readonly code: import("@angular/core").Signal<string | any[]>;
    readonly scale: import("@angular/core").Signal<string>;
    readonly computedSize: import("@angular/core").Signal<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<IconDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IconDirective, "svg[cIcon]", ["cIcon"], { "content": { "alias": "cIcon"; "required": false; "isSignal": true; }; "customClasses": { "alias": "customClasses"; "required": false; "isSignal": true; }; "size": { "alias": "size"; "required": false; "isSignal": true; }; "title": { "alias": "title"; "required": false; "isSignal": true; }; "height": { "alias": "height"; "required": false; "isSignal": true; }; "width": { "alias": "width"; "required": false; "isSignal": true; }; "name": { "alias": "name"; "required": false; "isSignal": true; }; "viewBoxInput": { "alias": "viewBox"; "required": false; "isSignal": true; }; "xmlns": { "alias": "xmlns"; "required": false; "isSignal": true; }; "pointerEvents": { "alias": "pointer-events"; "required": false; "isSignal": true; }; "role": { "alias": "role"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
