import * as i0 from "@angular/core";
export declare class ModalDialogComponent {
    /**
     * Align the modal in the center or top of the screen.
     * @default undefined
     */
    readonly alignment: import("@angular/core").InputSignal<"top" | "center" | undefined>;
    /**
     * Set modal to covers the entire user viewport.
     * @return {boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'}
     */
    readonly fullscreen: import("@angular/core").InputSignal<boolean | "sm" | "md" | "lg" | "xl" | "xxl" | undefined>;
    /**
     * Does the modal dialog itself scroll, or does the whole dialog scroll within the window.
     * @default false
     * @return {boolean}
     */
    readonly scrollable: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * Size the component small, large, or extra large.
     * @default undefined
     * @return {'sm' | 'lg' | 'xl'}
     */
    readonly size: import("@angular/core").InputSignal<"sm" | "lg" | "xl" | undefined>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModalDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ModalDialogComponent, "c-modal-dialog", never, { "alignment": { "alias": "alignment"; "required": false; "isSignal": true; }; "fullscreen": { "alias": "fullscreen"; "required": false; "isSignal": true; }; "scrollable": { "alias": "scrollable"; "required": false; "isSignal": true; }; "size": { "alias": "size"; "required": false; "isSignal": true; }; }, {}, never, ["*"], true, never>;
}
