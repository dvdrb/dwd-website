import * as i0 from "@angular/core";
export declare class FormCheckInputDirective {
    #private;
    /**
     * Specifies the type of component.
     * @default 'checkbox'
     */
    readonly type: import("@angular/core").InputSignal<"checkbox" | "radio">;
    /**
     * Set component indeterminate state.
     * @default false
     */
    readonly indeterminateInput: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    get indeterminate(): boolean;
    /**
     * Set component validation state to valid.
     * @default undefined
     */
    readonly valid: import("@angular/core").InputSignal<boolean | undefined>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    /**
     * Set component checked state.
     * @default false
     */
    readonly checkedInput: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    get checked(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<FormCheckInputDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<FormCheckInputDirective, "input[cFormCheckInput]", never, { "type": { "alias": "type"; "required": false; "isSignal": true; }; "indeterminateInput": { "alias": "indeterminate"; "required": false; "isSignal": true; }; "valid": { "alias": "valid"; "required": false; "isSignal": true; }; "checkedInput": { "alias": "checked"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
