import * as i0 from "@angular/core";
export declare class NavLinkDirective {
    #private;
    /**
     * Sets .nav-link class to the host. [docs]
     * @default true
     */
    readonly cNavLink: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * Toggle the active state for the component. [docs]
     * @default undefined
     */
    readonly active: import("@angular/core").InputSignal<boolean | undefined>;
    /**
     * Set disabled attr for the host element. [docs]
     * @default false
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    readonly ariaCurrent: import("@angular/core").Signal<"page" | null>;
    ariaDisabled: boolean | null;
    attrDisabled: boolean | string | null;
    attrTabindex: '-1' | null;
    styleCursor: 'pointer' | null;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NavLinkDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NavLinkDirective, "[cNavLink]", never, { "cNavLink": { "alias": "cNavLink"; "required": false; "isSignal": true; }; "active": { "alias": "active"; "required": false; "isSignal": true; }; "disabled": { "alias": "disabled"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
