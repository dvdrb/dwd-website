import { ElementRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare class PageItemDirective {
    #private;
    /**
     * Toggle the active state for the component.
     * @return boolean
     */
    readonly active: import("@angular/core").InputSignal<boolean | undefined>;
    /**
     * Toggle the disabled state for the component.
     * @return boolean
     */
    readonly disabled: import("@angular/core").InputSignal<boolean | undefined>;
    readonly ariaCurrent: import("@angular/core").Signal<"page" | null>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly pageLinkElementRef: import("@angular/core").Signal<ElementRef<any> | undefined>;
    readonly pageLinkElementRefEffect: import("@angular/core").EffectRef;
    static ɵfac: i0.ɵɵFactoryDeclaration<PageItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PageItemDirective, "[cPageItem]", never, { "active": { "alias": "active"; "required": false; "isSignal": true; }; "disabled": { "alias": "disabled"; "required": false; "isSignal": true; }; }, {}, ["pageLinkElementRef"], never, true, never>;
}
